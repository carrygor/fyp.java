#!/usr/bin/bashjava_root="/opt/youplus/git/youplus.java"git_root="/opt/youplus/git"java_code="youplus.java"web_root="/opt/youplus/git/web_apps"profile=$3env=$4PROFILE_ENV=" -Dspring.profiles.active=master "if [ "$env" = "slave" ]; then    PROFILE_ENV=" -Dspring.profiles.active=slave "fiecho $PROFILE_ENVdeclare -a services=("base" "notification");declare -a servers=("apps" "cms" "thirdparty" "tenants");red_echo() {	echo -e "\033[31m$1\033[0m"}green_echo() {	echo -e "\033[32m$1\033[0m"}#执行pullpull() {	echo "步骤:[拉取代码]开始"	if [ "$1" = "web" ]; then		echo "进入WEB代码目录:"		cd "$git_root"	elif [ "$1" = "java" ]; then		echo "进入GIT代码目录:"		cd "$git_root"	else		red_echo "错误的平台参数"		exit 0	fi	pwd	rm -rf youplus.javaexpect -c "	set timeout 100	puts \"Step START: CLONE最新代码\"        spawn git clone https://gitee.com/youplus2017/youplus.java.git;        expect {            \"*sername*\" {				puts \"填入用户名\"                send \"ipbn@youplus.com.cn\r\";				expect {					\"*assword*\" {						puts \"填入密码\"						send \"youPLUS2017\r\";						expect {							"*lready*" {								exit 1;							}							"*forward*" {								exit 2;							}							"*Authentication*" {								exit 0;							}							"*deltas*100%*done*" {                                sleep 3                                exit 1;                            }						}					}				}            }        }"if [ "$?" = "0" ]; then	red_echo "拉取代码失败,退出！"	return 0else	echo "更新代码成功！"	echo "步骤:[拉取代码]结束"	return 1fi}#进行loadbuildloadbuild() {	echo "步骤:[拉取代码]开始"	if [ "$1" = "web" ]; then		echo "进入WEB代码目录:"		cd "$java_root"		pwd		echo "步骤:[编译打包]开始"		npm run "$profile"		echo "步骤:[编译打包]结束"		return 1	elif [ "$1" = "java" ]; then		echo "进入JAVA代码目录:"		cd "$java_root"		pwd		echo "步骤:[编译打包]开始,跳过Junit 测试"		mvn clean package -P "$profile" -Dmaven.test.skip=true		echo "步骤:[编译打包]结束"		return 1	else		red_echo "错误的平台参数"		return 0	fi}echo_help() {	red_echo "只支持以下指令："	echo "参数1：[java/web]"	echo "java          :  该操作是针对后台JAVA的操作"	echo "web           :  该操作是针对前端WEB的操作"	red_echo "如果第一个参数值java:"	echo "参数2:[loadbuild/pull/stop_server/start_server/change_load/do_all]"	echo "loadbuild     :  下载最新的代码进行loadbuild]"	echo "pull          :  下载最新的代码]"	echo "build_only    :  不下载代码，只做loadbuild]"	echo "stop_server   :  停止所有服务"	echo "start_server  :  开启所有服务"	echo "change_load   :  将build好的load放到服务器上"	echo "do_all       :  pull最新代码->loadbuild->stop服务->changeload->start服务"	red_echo "如果第一个参数值web:"	echo "参数2:[loadbuild/pull/stop_server/start_server/change_load/do_all]"	echo "loadbuild     :  下载最新的代码进行loadbuild]"	echo "pull          :  下载最新的代码]"	echo "build_only    :  不下载代码，只做loadbuild]"	echo "change_load   :  将build好的load放到服务器上"	echo "do_all        :  pull最新代码->loadbuild->changeload"	red_echo "如果第一个参数值java:"	echo "参数3:[test/prod]"	echo "test          :  测试环境"	echo "prod          :  生产环境"	red_echo "如果第一个参数值java:"    echo "参数4:[test/prod]"    echo "master        :  master主机器"    echo "slave         :  slave从机器"}check_result() {	if [ $1 -eq 0 ]; then		red_echo "步骤执行失败，请检查log输出。即将退出。"		exit 0	fi}stop_server() {	echo "步骤：执行停止后台服务"	echo "01：检查有哪些进程:"	for sname in ${services[@]}; do		ps -ef|grep "youplus-${sname}-rpc-service"    done	for sname in ${servers[@]}; do		ps -ef|grep "youplus-${sname}-rpc-service"		ps -ef|grep "youplus-${sname}-server"    done	echo "02：杀死对应进程"	sleep 1	for sname in ${services[@]}; do	    srv_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service/bin"	    cd "$srv_dir"	    pwd	    if [ -x "$srv_dir" ] ; then	        echo "执行停止:${sname} RPC 服务"            ./stop.sh >/dev/null&            sleep 1            ps -ef |grep "youplus-${sname}-rpc-service"|awk '{print $2}'|xargs kill -9        else            red_echo "不存在目录${srv_dir},跳过执行。"        fi	    ./stop.sh >/dev/null&    done	for sname in ${servers[@]}; do	    srv_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service/bin"	    cd "$srv_dir"	    pwd        if [ -x "$srv_dir" ] ; then            echo "执行停止:${sname} RPC 服务"            ./stop.sh >/dev/null&            sleep 1            ps -ef |grep "youplus-${sname}-rpc-service"|awk '{print $2}'|xargs kill -9        else            red_echo "不存在目录${srv_dir},跳过执行。"        fi		ps -ef |grep "youplus-${sname}-server"|awk '{print $2}'|xargs kill -9    done	sleep 1	echo "03：检查是否成功"	for sname in ${services[@]}; do		ps -ef|grep youplus-${sname}-rpc-service    done	for sname in ${servers[@]}; do		ps -ef|grep youplus-${sname}-rpc-service		ps -ef|grep youplus-${sname}-server    done	echo "成功返回。"	return 1}change_load() {	for sname in ${services[@]}; do		source_dir="/opt/youplus/git/${java_code}/youplus-${sname}/youplus-${sname}-rpc-service/target"		target_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service"		service_name="youplus-${sname}-rpc-service"		if [ ! -x "$target_dir" ] ; then		  mkdir "$target_dir"		fi		cd "$target_dir"		rm -rf bin conf lib "$service_name".zip		cp "$source_dir"/"$service_name".zip ./		unzip "$service_name".zip		sleep 1    done	for sname in ${servers[@]}; do		source_dir="/opt/youplus/git/${java_code}/youplus-${sname}/youplus-${sname}-rpc-service/target"		target_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service"		service_name="youplus-${sname}-rpc-service"		if [ ! -x "$target_dir" ] ; then		  mkdir "$target_dir"		fi		cd "$target_dir"		rm -rf bin conf lib "$service_name".zip		cp "$source_dir"/"$service_name".zip ./		unzip "$service_name".zip		sleep 1		server_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-server"		server_source_dir="/opt/youplus/git/${java_code}/youplus-${sname}/youplus-${sname}-server/target"		server_name="youplus-${sname}-server"		if [ ! -x "$server_dir" ] ; then		  mkdir "$server_dir"		fi		cd "/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-server"		rm "$server_name".jar -rf		cp "$server_source_dir"/"$server_name".jar ./		sleep 1    done	echo "成功退出。"	return 1}start_server_java() {	echo "步骤：开启server"	for sname in ${services[@]}; do	    srv_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service/bin"		cd "$srv_dir"		echo "进入目录："		pwd		if [ -x "$srv_dir" ] ; then            echo "执行启动:${sname} RPC 服务"            ./start.sh "$env" >/dev/null&        else            red_echo "不存在目录${srv_dir},跳过执行。"        fi		sleep 1    done	for sname in ${servers[@]}; do	    srv_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-rpc-service/bin"		cd "$srv_dir"		echo "进入目录："		pwd		if [ -x "$srv_dir" ] ; then            echo "执行启动:${sname} RPC 服务"            ./start.sh "$env" >/dev/null&        else            red_echo "不存在目录${srv_dir},跳过执行。"        fi		sleep 1        server_dir="/opt/youplus/apps/${env}/youplus-${sname}/youplus-${sname}-server"		cd "$server_dir"		echo "进入目录："		pwd		if [ -x "$server_dir" ] ; then            echo "执行启动:${sname} SpringBoot Server:"            JVM_ENV=" -Xmx256m -Xms256m -Xmn64m -Xss256k -XX:+PrintGCDetails -XX:+PrintGCDateStamps "            PROFILE_ENV=" -Dspring.profiles.active=master "            if [ "$env" = "slave" ]; then                PROFILE_ENV=" -Dspring.profiles.active=slave "            fi            java -jar $JVM_ENV $PROFILE_ENV youplus-${sname}-server.jar >/dev/null&        else            red_echo "不存在目录${server_dir},跳过执行。"        fi		sleep 1    done	echo "成功返回。"	return 1}doProc() {	if   [ $2 = "loadbuild" ] ; then		pull $1		check_result $?		loadbuild $1		check_result $?	elif [ $2 = "pull" ] ; then		pull $1		check_result $?	elif [ $2 = "build_only" ] ; then		loadbuild $1		check_result $?	elif [ $1 = "java" ]&&[ $2 = "stop_server" ] ; then		stop_server		check_result $?	elif [ $1 = "java" ]&&[ $2 = "change_load" ] ; then		change_load		check_result $?	elif [ $1 = "java" ]&&[ $2 = "start_server" ] ; then		start_server_java		check_result $?	elif [ $1 = "java" ]&&[ $2 = "do_all" ] ; then		pull $1		check_result $?		loadbuild $1		check_result $?		stop_server		check_result $?		change_load		check_result $?		start_server_java		check_result $?	else		red_echo "错误的指令:[$2]"		echo_help	fi}echo "~~~欢迎使用优加互联网平台自动化部署脚本~~~"if [ "$1" = "java" ]; then	green_echo "选择了后台操作[$1]"	if [ $# -ne 4 ] ; then		red_echo "参数数量错误，请输入正确的指令："		echo_help		exit	fielif [ "$1" = "web" ]; then	green_echo "选择了前端操作[$1]"	if [ $# -ne 2 ] ; then		red_echo "参数数量错误，请输入正确的指令："		echo_help		exit	fielse	red_echo "不支持的平台:[$1]"fidoProc $1 $2